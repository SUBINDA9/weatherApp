{"version":3,"sources":["components/UserLocation.js","components/Navbar.js","App.js","index.js"],"names":["UserLocation","props","weather","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","App","state","userPosition","latitude","longitude","regionInput","changeRegion","value","setState","changeLocation","e","preventDefault","Axios","get","then","res","userWeather","data","current","weather_descriptions","name","weather_icons","navigator","geolocation","getCurrentPosition","position","pos","coords","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12a84375.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function UserLocation(props) {\r\n    const { temperature, description, location, region, country, wind_speed, pressure, precip, humidity, img } = props.weather;\r\n\r\n    return (\r\n        <div className=\"user-weather\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-3 weather-temp\">\r\n                <h1>{temperature}<sup>o</sup>C , {description}</h1>\r\n                <h4>{location}</h4>\r\n                <p>{region} , {country}</p>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n                <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Wind Speed</b>(km/hr)</p>\r\n                <h2>{wind_speed}</h2>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Preassure</b>(millibar)</p>\r\n                <h2>{pressure}</h2>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Precipitation</b>(mm)</p>\r\n                <h2>{precip}</h2>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Humidity</b>(%)</p>\r\n                <h2>{humidity}</h2>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Navbar.css'\r\n\r\nexport default function Navbar() {\r\n\r\n    return (\r\n            <div className=\"nav\">\r\n                <h1 className=\"title\">Weather App @subinda</h1>\r\n            </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport UserLocation from './components/UserLocation.js';\nimport Navbar from './components/Navbar.js';\n\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends React.Component {\n\n  //state\n  state = {\n    userPosition: {\n      latitude: 35,\n      longitude: 139\n    },\n    weather: {},\n    regionInput: \"\"\n  }\n\n  componentDidMount() {\n    //check whether geolocation is supported\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        //get the lat and long of your device\n        let pos = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n\n        this.setState({ userPosition: pos });\n\n        //Weather Api call\n        Axios.get(`http://api.weatherstack.com/current?access_key=ee2c00a09ba65e4467143d28625d3fa2&query=${this.state.userPosition.latitude},${this.state.userPosition.longitude}`).then(res => {\n\n          let userWeather = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n\n          this.setState({ weather: userWeather });\n        })\n      })\n    }\n  }\n\n  //update the value of the the input field with state\n  changeRegion = (value) => {\n    this.setState({ regionInput: value })\n  }\n\n  //update the weather depending upon the value user entered\n  changeLocation = (e) => {\n\n    e.preventDefault()\n\n    Axios.get(`http://api.weatherstack.com/current?access_key=ee2c00a09ba65e4467143d28625d3fa2&query=${this.state.regionInput}`).then(res => {\n\n      let userWeather = {\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        location: res.data.location.name,\n        region: res.data.location.region,\n        country: res.data.location.country,\n        wind_speed: res.data.current.wind_speed,\n        pressure: res.data.current.pressure,\n        precip: res.data.current.precip,\n        humidity: res.data.current.humidity,\n        img: res.data.current.weather_icons\n      }\n\n      this.setState({ weather: userWeather });\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"container\">\n          \n          <UserLocation weather={this.state.weather} />\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}